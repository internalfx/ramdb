"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

// Some code taken with gratitiude from the LokiJS project.

// export var defaultSort = function (a, b) {
//   return (a < b) ? -1 : ((a > b) ? 1 : 0)
// }

var sort = exports.sort = function sort(a, b) {
  if (a === null && b === null) {
    return 0;
  }

  if (a === null) {
    return -1;
  }

  if (b === null) {
    return 1;
  }

  if (a < b) {
    return -1;
  }

  if (a > b) {
    return 1;
  }

  return 0;
};

var unique_id = exports.unique_id = function unique_id() {
  return "" + (Math.random() + 1).toString(36).substr(2);
};

var insertAt = exports.insertAt = function insertAt(array, index, value) {
  array.splice(index, 0, value);
  return array;
};

var removeAt = exports.removeAt = function removeAt(array, index) {
  array.splice(index, 1);
  return array;
};

var replaceAt = exports.replaceAt = function replaceAt(array, index, value) {
  array[index] = value;
  return array;
};

var binarySearch = exports.binarySearch = function binarySearch(array, value) {
  var lo = 0;
  var hi = array.length;
  var compared = undefined;
  var mid = undefined;

  while (lo < hi) {
    mid = (lo + hi) / 2 | 0;
    compared = sort(value, array[mid]);
    if (compared === 0) {
      return {
        found: true,
        index: mid
      };
    } else if (compared < 0) {
      hi = mid;
    } else {
      lo = mid + 1;
    }
  }

  return {
    found: false,
    index: hi
  };
};
//# sourceMappingURL=data:application/json;base64,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d2l0aCBncmF0aXRpdWRlIGZyb20gdGhlIExva2lKUyBwcm9qZWN0LlxuXG4vLyBleHBvcnQgdmFyIGRlZmF1bHRTb3J0ID0gZnVuY3Rpb24gKGEsIGIpIHtcbi8vICAgcmV0dXJuIChhIDwgYikgPyAtMSA6ICgoYSA+IGIpID8gMSA6IDApXG4vLyB9XG5cbmV4cG9ydCB2YXIgc29ydCA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gIGlmIChhID09PSBudWxsICYmIGIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gMFxuICB9XG5cbiAgaWYgKGEgPT09IG51bGwpIHtcbiAgICByZXR1cm4gLTFcbiAgfVxuXG4gIGlmIChiID09PSBudWxsKSB7XG4gICAgcmV0dXJuIDFcbiAgfVxuXG4gIGlmIChhIDwgYikge1xuICAgIHJldHVybiAtMVxuICB9XG5cbiAgaWYgKGEgPiBiKSB7XG4gICAgcmV0dXJuIDFcbiAgfVxuXG4gIHJldHVybiAwXG59XG5cbmV4cG9ydCB2YXIgdW5pcXVlX2lkID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gYCR7KE1hdGgucmFuZG9tKCkgKyAxKS50b1N0cmluZygzNikuc3Vic3RyKDIpfWBcbn1cblxuZXhwb3J0IHZhciBpbnNlcnRBdCA9IGZ1bmN0aW9uIChhcnJheSwgaW5kZXgsIHZhbHVlKSB7XG4gIGFycmF5LnNwbGljZShpbmRleCwgMCwgdmFsdWUpXG4gIHJldHVybiBhcnJheVxufVxuXG5leHBvcnQgdmFyIHJlbW92ZUF0ID0gZnVuY3Rpb24gKGFycmF5LCBpbmRleCkge1xuICBhcnJheS5zcGxpY2UoaW5kZXgsIDEpXG4gIHJldHVybiBhcnJheVxufVxuXG5leHBvcnQgdmFyIHJlcGxhY2VBdCA9IGZ1bmN0aW9uIChhcnJheSwgaW5kZXgsIHZhbHVlKSB7XG4gIGFycmF5W2luZGV4XSA9IHZhbHVlXG4gIHJldHVybiBhcnJheVxufVxuXG5leHBvcnQgdmFyIGJpbmFyeVNlYXJjaCA9IGZ1bmN0aW9uIChhcnJheSwgdmFsdWUpIHtcbiAgbGV0IGxvID0gMFxuICBsZXQgaGkgPSBhcnJheS5sZW5ndGhcbiAgbGV0IGNvbXBhcmVkXG4gIGxldCBtaWRcblxuICB3aGlsZSAobG8gPCBoaSkge1xuICAgIG1pZCA9ICgobG8gKyBoaSkgLyAyKSB8IDBcbiAgICBjb21wYXJlZCA9IHNvcnQodmFsdWUsIGFycmF5W21pZF0pXG4gICAgaWYgKGNvbXBhcmVkID09PSAwKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmb3VuZDogdHJ1ZSxcbiAgICAgICAgaW5kZXg6IG1pZFxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoY29tcGFyZWQgPCAwKSB7XG4gICAgICBoaSA9IG1pZFxuICAgIH0gZWxzZSB7XG4gICAgICBsbyA9IG1pZCArIDFcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGZvdW5kOiBmYWxzZSxcbiAgICBpbmRleDogaGlcbiAgfVxufVxuIl19